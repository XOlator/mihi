- f ||= nil

- unless f.blank?
  - if f.object.piece.blank?
    %p Choose one of the page types below:
    .buttons
      - ExhibitionPiece::TYPES.each do |v|
        %a.button{href: new_manage_exhibition_section_piece_url(@exhibition, @section, type: v)}= v.to_s.capitalize

  - else
    - if f.object.new_record?
      %input{type: 'hidden', name: 'type', value: params[:type]}

    = f.fields_for :piece_attributes, f.object.piece do |p|
      - case f.object.piece.class.to_s
        - when 'PieceText'
          .row
            = p.label :theme
            = p.select :theme, PieceText::THEMES.map{|v| [v.to_s.capitalize,v]}
          .row
            = p.label :title
            = p.text_field :title
          .row
            = p.label :content
            = p.text_area :content

        - when 'PiecePage'
          .row
            = p.label :url
            = p.text_field :url
          .row
            = p.label :wayback_url
            = p.text_field :wayback_url
          .row
            = p.label :url
            = p.text_field :url
          .row
            = p.label :timeline_year
            = p.select :timeline_year, (1980..(Date.today + 1.year).year).map{|v| [v,v]}.reverse, include_blank: true
          .row
            = p.label :title
            = p.text_field :title
          .row
            = p.label :excerpt
            = p.text_field :excerpt
          .row
            = p.label :description
            = p.text_field :description
          .row
            = p.label :author
            = p.text_field :author
          .row
            = p.label :organization
            = p.text_field :organization

    .buttons
      - if f.object.new_record?
        = f.button "Create"
      - else
        = f.button "Update"
  